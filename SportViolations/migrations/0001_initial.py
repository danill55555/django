# Generated by Django 5.1.1 on 2025-02-22 06:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('trainer', 'Тренер')], default='trainer', max_length=10)),
                ('surname', models.CharField(blank=True, max_length=150)),
                ('patronymic', models.CharField(blank=True, max_length=150)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('patronymic', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('birth_date', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('patronymic', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField()),
                ('qualification', models.TextField()),
                ('experience', models.TextField()),
                ('chronic_conditions', models.TextField()),
                ('mother_height', models.TextField()),
                ('dad_height', models.TextField()),
                ('mother_sport', models.TextField()),
                ('dad_sport', models.TextField()),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('survey_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_created', models.BooleanField(default=False)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SportViolations.account')),
            ],
        ),
        migrations.CreateModel(
            name='Anthropometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(verbose_name='Рост')),
                ('weight', models.FloatField(verbose_name='Масса')),
                ('foot_length', models.FloatField(verbose_name='Длина стопы')),
                ('shin_length', models.FloatField(verbose_name='Длина голени')),
                ('thigh_length', models.FloatField(verbose_name='Длина бедра')),
                ('arm_span', models.FloatField(verbose_name='Размах рук')),
                ('waist_circumference', models.FloatField(verbose_name='Объем талии')),
                ('hip_circumference', models.FloatField(verbose_name='Объем бедер')),
                ('chest_circumference', models.FloatField(verbose_name='Окружность грудной клетки')),
                ('is_created', models.BooleanField(default=False)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anthropometry', to='SportViolations.questionnaire')),
            ],
        ),
        migrations.CreateModel(
            name='WristDynamometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left_hand', models.FloatField(verbose_name='Левая рука')),
                ('right_hand', models.FloatField(verbose_name='Правая рука')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wrist_dynamometry', to='SportViolations.questionnaire')),
            ],
        ),
    ]
